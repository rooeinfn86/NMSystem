from collections import defaultdict
import re

IGNORED_LINES = [
    "!",
    "Building configuration",
    "Current configuration",
    "Last configuration change",
    "Generated by",
    "Time since",
]

def clean_config(raw_text: str) -> str:
    lines = raw_text.splitlines()
    clean_lines = []
    for line in lines:
        stripped = line.strip()
        if not stripped:
            continue
        if any(stripped.startswith(prefix) for prefix in IGNORED_LINES):
            continue
        clean_lines.append(stripped)
    return "\n".join(clean_lines)

def compute_snapshot_restore(snapshot_config: str) -> str:
    # Directly apply the cleaned snapshot config
    cleaned_snapshot = clean_config(snapshot_config)
    commands = cleaned_snapshot.splitlines()
    # commands.append("write memory")
    return "\n".join(commands)

def is_config_different(current_config: str, snapshot_config: str) -> bool:
    return clean_config(current_config).strip() != clean_config(snapshot_config).strip()

