version: '3.8'

services:
  # Frontend Development
  frontend-dev:
    build: 
      context: ../cisco-config-ui
      dockerfile: Dockerfile.dev
    container_name: cisco_ai_frontend_dev
    ports:
      - "3000:3000"
    volumes:
      - ../cisco-config-ui:/app
      - /app/node_modules
    environment:
      - CHOKIDAR_USEPOLLING=true
      - WATCHPACK_POLLING=true
      - REACT_APP_API_BASE_URL=http://localhost:8000
    depends_on:
      - backend
    networks:
      - cisco_ai_network
    restart: unless-stopped
    stdin_open: true
    tty: true

  # Backend with development settings
  backend:
    build: ..
    container_name: cisco_ai_backend_dev
    environment:
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_NAME=cisco_ai
      - DB_USER=postgres
      - DB_PASSWORD=YOUR_PASSWORD_HERE
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - SECRET_KEY=${SECRET_KEY:-YOUR_SECRET_KEY_HERE}
      - ALGORITHM=HS256
      - ACCESS_TOKEN_EXPIRE_MINUTES=30
    volumes:
      - ../data:/app/data
      - ../gpt_cache:/app/gpt_cache
      - ../uploads:/app/uploads
      - ../reports:/app/reports
      - ../snapshots:/app/snapshots
      - ..:/app
    ports:
      - "8000:8000"
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - cisco_ai_network
    restart: unless-stopped
    command: ["uvicorn", "main:app", "--host", "0.0.0.0", "--port", "8000", "--reload"]

networks:
  cisco_ai_network:
    driver: bridge 